apiVersion: v1
kind: Service
metadata:
  name: porter-manager-service
  namespace: system
  labels:
    control-plane: porter-manager
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    control-plane: porter-manager
    controller-tools.k8s.io: "1.0"
  ports:
  - port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: porter-manager
  namespace: system
  labels:
    control-plane: porter-manager
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    matchLabels:
      control-plane: porter-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        control-plane: porter-manager
        controller-tools.k8s.io: "1.0"
    spec:
      hostNetwork: true
      nodeSelector:
        dedicated: master
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      # cloud controller manages should be able to run on masters
      - key: "node-role.kubernetes.io/master"
        effect: NoSchedule
      containers:
      - command:
        - /manager
        args:
          - -f
          - /etc/config/config.toml
        image: controller:latest
        imagePullPolicy: IfNotPresent
        name: manager
        readinessProbe:
          httpGet:
            path: /hello
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 3
        securityContext:
          capabilities:
            add: ["NET_ADMIN", "SYS_TIME"]
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          # - name: SECRET_NAME
          #   value: $(WEBHOOK_SECRET_NAME)
        volumeMounts:
        - name: config-bgp
          mountPath: /etc/config
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        # ports:
        # - containerPort: 9876
        #   name: webhook-server
        #   protocol: TCP
        # volumeMounts:
        # - mountPath: /tmp/cert
        #   name: cert
        #   readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      # - name: cert
      #   secret:
      #     defaultMode: 420
      #     secretName: webhook-server-secret
      - name: config-bgp
        configMap:
          name: bgp-cfg

---
apiVersion: v1
kind: Secret
metadata:
  name: webhook-server-secret
  namespace: system

# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: porter-service-account